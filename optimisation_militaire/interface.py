"""
Ce script permet Ã  lâ€™utilisateur de saisir manuellement les donnÃ©es nÃ©cessaires
Ã  la gÃ©nÃ©ralisation du problÃ¨me dâ€™optimisation militaire :

- les coÃ»ts des lots
- la composition des lots
- les besoins minimaux en armement
- les noms des armements

Les donnÃ©es sont ensuite sauvegardÃ©es automatiquement dans un fichier JSON
situÃ© dans le dossier 'Data', pour Ãªtre utilisÃ©es ultÃ©rieurement par 'app.py' dans Optimisation_militaire.
"""




import json
import os

def ask_for_list(prompt, length=None):

    """
    Demande Ã  lâ€™utilisateur une liste de valeurs numÃ©riques saisies sur une seule ligne

    Agrss :
    - prompt (str)       : message affichÃ© Ã  lâ€™utilisateur
    - length (int) : nombre exact de valeurs attendues

    Retour :
    - list of float : les valeurs saisies par lâ€™utilisateur
    """

    while True:
        try:
            values = input(prompt).strip().split()
            if length is not None and len(values) != length:
                print(f"Erreur : vous devez saisir exactement {length} valeurs.")
                continue
            return [float(v) for v in values]
        except ValueError:
            print("Erreur : saisie incorrecte, veuillez entrer des nombres sÃ©parÃ©s par des espaces.")

def main():

    """
    Elle guide lâ€™utilisateur Ã  travers :
    - la saisie des coÃ»ts des lots
    - la dÃ©finition du nombre de types dâ€™armement
    - la saisie de la composition de chaque lot
    - la saisie des besoins minimaux
    - la saisie des noms des armements

    Les donnÃ©es sont sauvegardÃ©es dans 'Data/generalisation_data.json'
    """

    print("\n===     Saisie interactive des donnÃ©es pour l'optimisation militaire     === ")
    costs = ask_for_list("\n-->  Entrez les coÃ»ts des lots (exemple : 10 12 15) : ")
    n_lots = len(costs)
    n_constraints = int(input("\n-->  Combien de types dâ€™armement diffÃ©rents (contraintes) souhaitez-vous dÃ©finir ? : "))


    print(f"\n--> Pour chaque type dâ€™armement, entrez les quantitÃ©s contenues dans les {n_lots} lots.")
    constraints = []
    for i in range(n_constraints):
        prompt = f"   ğŸ”¹ Type dâ€™armement #{i+1} (quantitÃ©s dans chaque lot, sÃ©parÃ©es par espaces) : "
        row = ask_for_list(prompt, length=n_lots)
        constraints.append(row)

    requirements = ask_for_list(f"\n-->  Entrez les besoins minimaux pour chaque type dâ€™armement (exemple : 1000 500 200) : ",
        length=n_constraints)

    armes = []
    print("\n-->  Nommez chaque type dâ€™armement (exemple : fusils, grenades, chars...) :")
    for i in range(n_constraints):
        nom = input(f"   ğŸ”¹ Nom du type dâ€™armement #{i+1} : ")
        armes.append(nom)

    data = {
        "costs": costs,
        "constraints": constraints,
        "requirements": requirements,
        "armes": armes
    }

    base_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "Data"))
    os.makedirs(base_dir, exist_ok=True)
    filepath = os.path.join(base_dir, "generalisation_data.json")

    with open(filepath, "w") as f:
        json.dump(data, f, indent=4)
    print(f"\n DonnÃ©es sauvegardÃ©es avec succÃ¨s dans {filepath}")



if __name__ == "__main__":
    main()
